# -*- coding: utf-8 -*-
from aiogram import types
from aiogram.dispatcher import FSMContext
from keyboards.inline.short_bool import short

from aiogram.dispatcher.filters.builtin import CommandStart
from aiogram.types import Message, CallbackQuery
import logging
from states.state import StateBot
from aiogram.dispatcher.filters.builtin import CommandHelp

# from keyboards.default.button import year_button
from loader import dp

from keyboards.inline.year_goriz import choice


@dp.message_handler(text='üö™ –ù–∞—á–∞—Ç—å üö™',state=StateBot.Invest_gorizont)
async def bot_year(message: types.Message):

    await message.answer("–£–∫–∞–∂–∏—Ç–µ –¥–ª–∏–Ω—É –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–æ–≥–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞", reply_markup=choice)

@dp.callback_query_handler(text_contains="year", state=StateBot.Invest_gorizont)
async def buying_pear(call: CallbackQuery, state: FSMContext):
    await call.answer(cache_time=60)
    callback_data = str(call.data).split(':')[-1]

    await state.update_data(
        {"invest_gorizont": callback_data}
    )
    await StateBot.Short.set()
    await call.message.answer("–£—á–∏—Ç—ã–≤–∞—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –ø–æ —Ü–µ–Ω–Ω—ã–º –±—É–º–∞–≥–∞–º –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ?", reply_markup=short)

@dp.message_handler(CommandHelp(), state=StateBot.Short)
async def bot_help(message: types.Message):
    text = '–ö–∞–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∏–º–µ–µ—Ç —Å–µ—Ä–≤–∏—Å ABPF üßê\n\n' \
           '–ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω–Ω—ã—Ö –±—É–º–∞–≥ üìà \n\n' \
           '–û—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:\n\n' \
           '   <strong>1) –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Å–∏–Ω–∏—Ö —Ñ–∏—à–µ–∫ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç</strong>\n' \
           '   <strong>2) –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è</strong>\n' \
           '   <strong>3) –í—ã–≤–æ–¥ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–∂–¥–æ–π —Å–∏–Ω–µ–π —Ñ–∏—à–∫–µ</strong>\n' \
           '   <strong>4) –ü–æ–∫–∞–∑ –ø–æ–ª–Ω–æ–π —Ü–µ–Ω—ã –ø–æ—Ä—Ç—Ñ–µ–ª—è –Ω–∞ —Ç–µ–∫—É—â–∏–π –∏ –±—É–¥—É—â–∏–π –º–æ–º–µ–Ω—Ç—ã</strong>\n' \
           '   <strong>5) –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫ –ø–æ–∫—É–ø–∫–µ –¥–æ—Ö–æ–¥–Ω—ã—Ö –æ–±–ª–∏–≥–∞—Ü–∏–π</strong>\n\n' \

    await message.answer(text)