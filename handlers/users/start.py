# -*- coding: utf-8 -*-

from aiogram import types
from aiogram.dispatcher.filters.builtin import CommandStart
from aiogram.dispatcher.filters.builtin import CommandHelp
from keyboards.inline.regsid import keyboard_markup
from aiogram.dispatcher import FSMContext

from keyboards.default.button import start_button
from loader import dp

from states.state import StateBot

@dp.message_handler(CommandStart(), state=None)
async def bot_start(message: types.Message):
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç  üëã ,  {message.from_user.full_name}!\n\n"
                         f"ABPF - —ç—Ç–æ –≤—ã—Å–æ–∫–æ—Ç–æ—á–Ω—ã–π –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ü–∏–π –∏ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø–ª–∞–Ω–∞ –ø–æ–∫—É–ø–æ–∫ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –æ–±–ª–∏–≥–∞—Ü–∏–π üíµ \n\n", reply_markup=keyboard_markup)

    await StateBot.Invest_gorizont.set()

@dp.callback_query_handler(lambda c: c.data == 'press',state=StateBot.Invest_gorizont)
async def about_bot_message(call: types.CallbackQuery, state: FSMContext):
    await call.answer('–í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏', True)
    print(call.from_user.id)
    await state.update_data(
        {"tg_id": call.from_user.id}
    )
    await call.message.answer('<strong>–û—Ç–ª–∏—á–Ω–æ ‚úÖ</strong>\n'
                              '–¢–µ–ø–µ—Ä—å –≤—ã –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "üö™ –ù–∞—á–∞—Ç—å üö™"', reply_markup=start_button)

@dp.message_handler(CommandHelp(), state=StateBot.Invest_gorizont)
async def bot_help(message: types.Message):
    text = '–ö–∞–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∏–º–µ–µ—Ç —Å–µ—Ä–≤–∏—Å ABPF üßê\n\n' \
           '–ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω–Ω—ã—Ö –±—É–º–∞–≥ üìà \n\n' \
           '–û—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:\n\n' \
           '   <strong>1) –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Å–∏–Ω–∏—Ö —Ñ–∏—à–µ–∫ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç</strong>\n' \
           '   <strong>2) –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è</strong>\n' \
           '   <strong>3) –í—ã–≤–æ–¥ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–∂–¥–æ–π —Å–∏–Ω–µ–π —Ñ–∏—à–∫–µ</strong>\n' \
           '   <strong>4) –ü–æ–∫–∞–∑ –ø–æ–ª–Ω–æ–π —Ü–µ–Ω—ã –ø–æ—Ä—Ç—Ñ–µ–ª—è –Ω–∞ —Ç–µ–∫—É—â–∏–π –∏ –±—É–¥—É—â–∏–π –º–æ–º–µ–Ω—Ç—ã</strong>\n' \
           '   <strong>5) –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫ –ø–æ–∫—É–ø–∫–µ –¥–æ—Ö–æ–¥–Ω—ã—Ö –æ–±–ª–∏–≥–∞—Ü–∏–π</strong>\n\n' \

    await message.answer(text)